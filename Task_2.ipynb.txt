{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOFMqQ4T6PABXAxFio0IQGJ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Daksh110306/Task-No.-2/blob/main/Task_2.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "O4fhmhmkZk-Q"
      },
      "outputs": [],
      "source": [
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "42btQJpHcj5L"
      },
      "execution_count": 2,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "o7HeayJ3cn9G"
      },
      "execution_count": 3,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import files"
      ],
      "metadata": {
        "id": "VLTWkPt3d3AC"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import io"
      ],
      "metadata": {
        "id": "W7upnmoSeCEX"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "uploaded = files.upload()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 73
        },
        "id": "8h29cW5KeFOv",
        "outputId": "f43f0a33-98e7-4d4a-949c-2aa3ec92aba0"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ],
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-e32c2c7f-2cd9-4272-b771-ea8a188f7fe7\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-e32c2c7f-2cd9-4272-b771-ea8a188f7fe7\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script>// Copyright 2017 Google LLC\n",
              "//\n",
              "// Licensed under the Apache License, Version 2.0 (the \"License\");\n",
              "// you may not use this file except in compliance with the License.\n",
              "// You may obtain a copy of the License at\n",
              "//\n",
              "//      http://www.apache.org/licenses/LICENSE-2.0\n",
              "//\n",
              "// Unless required by applicable law or agreed to in writing, software\n",
              "// distributed under the License is distributed on an \"AS IS\" BASIS,\n",
              "// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n",
              "// See the License for the specific language governing permissions and\n",
              "// limitations under the License.\n",
              "\n",
              "/**\n",
              " * @fileoverview Helpers for google.colab Python module.\n",
              " */\n",
              "(function(scope) {\n",
              "function span(text, styleAttributes = {}) {\n",
              "  const element = document.createElement('span');\n",
              "  element.textContent = text;\n",
              "  for (const key of Object.keys(styleAttributes)) {\n",
              "    element.style[key] = styleAttributes[key];\n",
              "  }\n",
              "  return element;\n",
              "}\n",
              "\n",
              "// Max number of bytes which will be uploaded at a time.\n",
              "const MAX_PAYLOAD_SIZE = 100 * 1024;\n",
              "\n",
              "function _uploadFiles(inputId, outputId) {\n",
              "  const steps = uploadFilesStep(inputId, outputId);\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  // Cache steps on the outputElement to make it available for the next call\n",
              "  // to uploadFilesContinue from Python.\n",
              "  outputElement.steps = steps;\n",
              "\n",
              "  return _uploadFilesContinue(outputId);\n",
              "}\n",
              "\n",
              "// This is roughly an async generator (not supported in the browser yet),\n",
              "// where there are multiple asynchronous steps and the Python side is going\n",
              "// to poll for completion of each step.\n",
              "// This uses a Promise to block the python side on completion of each step,\n",
              "// then passes the result of the previous step as the input to the next step.\n",
              "function _uploadFilesContinue(outputId) {\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  const steps = outputElement.steps;\n",
              "\n",
              "  const next = steps.next(outputElement.lastPromiseValue);\n",
              "  return Promise.resolve(next.value.promise).then((value) => {\n",
              "    // Cache the last promise value to make it available to the next\n",
              "    // step of the generator.\n",
              "    outputElement.lastPromiseValue = value;\n",
              "    return next.value.response;\n",
              "  });\n",
              "}\n",
              "\n",
              "/**\n",
              " * Generator function which is called between each async step of the upload\n",
              " * process.\n",
              " * @param {string} inputId Element ID of the input file picker element.\n",
              " * @param {string} outputId Element ID of the output display.\n",
              " * @return {!Iterable<!Object>} Iterable of next steps.\n",
              " */\n",
              "function* uploadFilesStep(inputId, outputId) {\n",
              "  const inputElement = document.getElementById(inputId);\n",
              "  inputElement.disabled = false;\n",
              "\n",
              "  const outputElement = document.getElementById(outputId);\n",
              "  outputElement.innerHTML = '';\n",
              "\n",
              "  const pickedPromise = new Promise((resolve) => {\n",
              "    inputElement.addEventListener('change', (e) => {\n",
              "      resolve(e.target.files);\n",
              "    });\n",
              "  });\n",
              "\n",
              "  const cancel = document.createElement('button');\n",
              "  inputElement.parentElement.appendChild(cancel);\n",
              "  cancel.textContent = 'Cancel upload';\n",
              "  const cancelPromise = new Promise((resolve) => {\n",
              "    cancel.onclick = () => {\n",
              "      resolve(null);\n",
              "    };\n",
              "  });\n",
              "\n",
              "  // Wait for the user to pick the files.\n",
              "  const files = yield {\n",
              "    promise: Promise.race([pickedPromise, cancelPromise]),\n",
              "    response: {\n",
              "      action: 'starting',\n",
              "    }\n",
              "  };\n",
              "\n",
              "  cancel.remove();\n",
              "\n",
              "  // Disable the input element since further picks are not allowed.\n",
              "  inputElement.disabled = true;\n",
              "\n",
              "  if (!files) {\n",
              "    return {\n",
              "      response: {\n",
              "        action: 'complete',\n",
              "      }\n",
              "    };\n",
              "  }\n",
              "\n",
              "  for (const file of files) {\n",
              "    const li = document.createElement('li');\n",
              "    li.append(span(file.name, {fontWeight: 'bold'}));\n",
              "    li.append(span(\n",
              "        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n",
              "        `last modified: ${\n",
              "            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n",
              "                                    'n/a'} - `));\n",
              "    const percent = span('0% done');\n",
              "    li.appendChild(percent);\n",
              "\n",
              "    outputElement.appendChild(li);\n",
              "\n",
              "    const fileDataPromise = new Promise((resolve) => {\n",
              "      const reader = new FileReader();\n",
              "      reader.onload = (e) => {\n",
              "        resolve(e.target.result);\n",
              "      };\n",
              "      reader.readAsArrayBuffer(file);\n",
              "    });\n",
              "    // Wait for the data to be ready.\n",
              "    let fileData = yield {\n",
              "      promise: fileDataPromise,\n",
              "      response: {\n",
              "        action: 'continue',\n",
              "      }\n",
              "    };\n",
              "\n",
              "    // Use a chunked sending to avoid message size limits. See b/62115660.\n",
              "    let position = 0;\n",
              "    do {\n",
              "      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n",
              "      const chunk = new Uint8Array(fileData, position, length);\n",
              "      position += length;\n",
              "\n",
              "      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n",
              "      yield {\n",
              "        response: {\n",
              "          action: 'append',\n",
              "          file: file.name,\n",
              "          data: base64,\n",
              "        },\n",
              "      };\n",
              "\n",
              "      let percentDone = fileData.byteLength === 0 ?\n",
              "          100 :\n",
              "          Math.round((position / fileData.byteLength) * 100);\n",
              "      percent.textContent = `${percentDone}% done`;\n",
              "\n",
              "    } while (position < fileData.byteLength);\n",
              "  }\n",
              "\n",
              "  // All done.\n",
              "  yield {\n",
              "    response: {\n",
              "      action: 'complete',\n",
              "    }\n",
              "  };\n",
              "}\n",
              "\n",
              "scope.google = scope.google || {};\n",
              "scope.google.colab = scope.google.colab || {};\n",
              "scope.google.colab._files = {\n",
              "  _uploadFiles,\n",
              "  _uploadFilesContinue,\n",
              "};\n",
              "})(self);\n",
              "</script> "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Saving Titanic-Dataset.csv to Titanic-Dataset.csv\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_csv(io.BytesIO(uploaded['Titanic-Dataset.csv']))"
      ],
      "metadata": {
        "id": "C8LcP1XCeLaq"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Dataset loaded successfully!\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "F7Tzwi2PeU8O",
        "outputId": "0f0606b9-726a-4203-d976-9ddfc527faf6"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Dataset loaded successfully!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pnoPXocoeZcF",
        "outputId": "0a46143d-e99a-40c3-f313-a6e4424ed251"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 891 entries, 0 to 890\n",
            "Data columns (total 12 columns):\n",
            " #   Column       Non-Null Count  Dtype  \n",
            "---  ------       --------------  -----  \n",
            " 0   PassengerId  891 non-null    int64  \n",
            " 1   Survived     891 non-null    int64  \n",
            " 2   Pclass       891 non-null    int64  \n",
            " 3   Name         891 non-null    object \n",
            " 4   Sex          891 non-null    object \n",
            " 5   Age          714 non-null    float64\n",
            " 6   SibSp        891 non-null    int64  \n",
            " 7   Parch        891 non-null    int64  \n",
            " 8   Ticket       891 non-null    object \n",
            " 9   Fare         891 non-null    float64\n",
            " 10  Cabin        204 non-null    object \n",
            " 11  Embarked     889 non-null    object \n",
            "dtypes: float64(2), int64(5), object(5)\n",
            "memory usage: 83.7+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"\\nSummary Statistics:\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BejvAM7RefBj",
        "outputId": "ddfd864e-0718-4cad-91ba-7034d88c514b"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Summary Statistics:\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.describe())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GyquAAchezz4",
        "outputId": "e20890c2-1561-46a2-d60c-6c946f2255e5"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "       PassengerId    Survived      Pclass         Age       SibSp  \\\n",
            "count   891.000000  891.000000  891.000000  714.000000  891.000000   \n",
            "mean    446.000000    0.383838    2.308642   29.699118    0.523008   \n",
            "std     257.353842    0.486592    0.836071   14.526497    1.102743   \n",
            "min       1.000000    0.000000    1.000000    0.420000    0.000000   \n",
            "25%     223.500000    0.000000    2.000000   20.125000    0.000000   \n",
            "50%     446.000000    0.000000    3.000000   28.000000    0.000000   \n",
            "75%     668.500000    1.000000    3.000000   38.000000    1.000000   \n",
            "max     891.000000    1.000000    3.000000   80.000000    8.000000   \n",
            "\n",
            "            Parch        Fare  \n",
            "count  891.000000  891.000000  \n",
            "mean     0.381594   32.204208  \n",
            "std      0.806057   49.693429  \n",
            "min      0.000000    0.000000  \n",
            "25%      0.000000    7.910400  \n",
            "50%      0.000000   14.454200  \n",
            "75%      0.000000   31.000000  \n",
            "max      6.000000  512.329200  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"\\nSurvival Counts:\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dATWfWr0e6VE",
        "outputId": "bc45d186-ba0f-467d-b68e-75bc0cb7aed0"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Survival Counts:\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df['Survived'].value_counts())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OeRxE62Be-MX",
        "outputId": "08689fd5-1de6-4e60-dcf1-d60fb5f45687"
      },
      "execution_count": 19,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Survived\n",
            "0    549\n",
            "1    342\n",
            "Name: count, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"\\nPreview of Data:\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HpqvB3fwfBfk",
        "outputId": "ef03ef78-3d2d-4e70-82d8-4a813762cf9c"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Preview of Data:\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(df.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AY5eY7W3fFdV",
        "outputId": "585f4346-27d7-4b4b-ed77-edc7019c0154"
      },
      "execution_count": 21,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   PassengerId  Survived  Pclass  \\\n",
            "0            1         0       3   \n",
            "1            2         1       1   \n",
            "2            3         1       3   \n",
            "3            4         1       1   \n",
            "4            5         0       3   \n",
            "\n",
            "                                                Name     Sex   Age  SibSp  \\\n",
            "0                            Braund, Mr. Owen Harris    male  22.0      1   \n",
            "1  Cumings, Mrs. John Bradley (Florence Briggs Th...  female  38.0      1   \n",
            "2                             Heikkinen, Miss. Laina  female  26.0      0   \n",
            "3       Futrelle, Mrs. Jacques Heath (Lily May Peel)  female  35.0      1   \n",
            "4                           Allen, Mr. William Henry    male  35.0      0   \n",
            "\n",
            "   Parch            Ticket     Fare Cabin Embarked  \n",
            "0      0         A/5 21171   7.2500   NaN        S  \n",
            "1      0          PC 17599  71.2833   C85        C  \n",
            "2      0  STON/O2. 3101282   7.9250   NaN        S  \n",
            "3      0            113803  53.1000  C123        S  \n",
            "4      0            373450   8.0500   NaN        S  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(6, 4))\n",
        "plt.hist(df['Age'].dropna(), bins=20, color='skyblue', edgecolor='black')\n",
        "plt.title(\"Age Distribution\")\n",
        "plt.xlabel(\"Age\")\n",
        "plt.ylabel(\"Count\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        },
        "id": "qfXqtk25iNd0",
        "outputId": "26d6775e-d38e-41b6-d6f4-99a321eee33e"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(6, 4))\n",
        "sns.boxplot(x=df['Fare'])\n",
        "plt.title(\"Fare Distribution (Boxplot)\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        },
        "id": "QGGLxSAiiRM3",
        "outputId": "875a8166-6de8-4b17-99c9-c377abc7382e"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(6, 4))\n",
        "sns.barplot(x='Sex', y='Survived', data=df)\n",
        "plt.title(\"Survival Rate by Gender\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        },
        "id": "ai8U4Ke1iVSW",
        "outputId": "a3d96114-1521-4cde-e69a-91d47dd17d59"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "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CwsLk9VqVVZWlnr16lUXJQL1Vm19Xv73v/9pz549WrRokXr27ClJ+vjjj6tcp3PnznrzzTcVGhqqBg34yqpP+K+FeumKK67QkiVLtG7dOl122WV69dVXtXXrVl122WVO+3t7e+vBBx/UAw88oPLycvXo0UOFhYX65JNP5OPjo1GjRtXxEQDnr9r6vDRr1kwXXXSRXnjhBbVs2VJZWVmaMmVKlevce++9WrRokUaOHKmHHnpIzZs31759+7R8+XK9+OKLcnd3r1EtqH0EDNRL48eP1+eff66YmBhZLBaNHDlSEyZMsN/G6syMGTPUokUL2Ww2HThwQE2bNlXnzp01derUOqwcqB9q4/Pi5uam5cuX6+9//7vatWunK6+8Uv/+97/Vu3fvSte5+OKL9cknn+jhhx9Wv379VFJSopCQEN10001yc+NGyPMZr2sHAACmI/4BAADTETAAAIDpCBgAAMB0BAwAAGA6AgYAADAdAQMAAJiOgAEAAExHwAAAAKYjYAAAANMRMADUifz8fN1zzz269NJLZbVaFRgYqOjoaH3yySeuLg1ALeBdJADqxK233qrS0lItXrxYrVq1Um5urtLS0vS///3P1aUBqAWcwQBQ644eParNmzdr1qxZuuGGGxQSEqKuXbsqISFBf/nLX+x9xo4dqxYtWsjHx0d9+vTRF198IenU2Y/AwEA9/fTT9m1u2bJFHh4eSktLc8kxAagaAQNArfPy8pKXl5dWr16tkpISp32GDx+uvLw8vf/++8rMzFTnzp1144036vDhw2rRooWSk5M1ffp0bdu2TceOHdOdd96piRMn6sYbb6zjowFQHbxNFUCdePPNNzVu3Dj9/PPP6ty5s3r16qXbbrtNHTp00Mcff6wBAwYoLy9PVqvVvk7r1q310EMP6e6775Yk3Xvvvfrggw8UGRmpnTt3auvWrQ79AZw/CBgA6swvv/yizZs369NPP9X777+vjIwMvfjiiyouLtbf//53NWrUyKH/zz//rAcffFCzZs2yz7dr107Z2dnKzMxU+/btXXEYAKqBgAHAZcaOHasNGzZowoQJmj9/vjZt2lShT9OmTeXn5ydJ2rVrl7p06aJff/1Vb731lgYNGlTHFQOoLu4iAeAyYWFhWr16tTp37qycnBw1aNBAoaGhTvuWlpbqjjvuUExMjK688kqNHTtWO3fulL+/f90WDaBaOIMBoNb973//0/Dhw3XXXXepQ4cO8vb21rZt2zRp0iQNGDBAL774oq6//nodO3ZM//znP9WmTRv99NNPWrNmjYYOHarIyEhNnjxZb7zxhr744gt5eXmpV69e8vX11XvvvefqwwPgBAEDQK0rKSnR9OnTtX79eu3fv1+//vqrgoODNXz4cE2dOlWNGjXSsWPH9Mgjj+jNN9+035Z6/fXXy2azaf/+/erbt682btyoHj16SJIOHjyojh07aubMmbrnnntcfIQA/oiAAQAATMdzMAAAgOkIGAAAwHQEDAAAYDoCBgAAMB0BAwAAmI6AAQAATEfAAAAApiNgAAAA0xEwAACA6QgYAADAdAQMAABguv8Do6X0DyNEXCoAAAAASUVORK5CYII=\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(6, 4))\n",
        "sns.barplot(x='Pclass', y='Survived', data=df)\n",
        "plt.title(\"Survival Rate by Passenger Class\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        },
        "id": "9C--40dtiZNU",
        "outputId": "c8c01994-5fba-4ff9-f9a2-3b289adecefc"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(6, 4))\n",
        "sns.violinplot(x='Survived', y='Age', data=df)\n",
        "plt.title(\"Age Distribution by Survival Status\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        },
        "id": "1XLFuPw3idDe",
        "outputId": "7aec31f6-dc13-4552-8ce0-db290e60ea6f"
      },
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAhMAAAGJCAYAAAAwtrGcAAAAOnRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjEwLjAsIGh0dHBzOi8vbWF0cGxvdGxpYi5vcmcvlHJYcgAAAAlwSFlzAAAPYQAAD2EBqD+naQAAcK9JREFUeJzt3Xd4FOXax/Hv9vRe6Z1I70VQBBFUQFDPETuorwJir8eGKCKCUsQCHhVFRZpKEQUUBBTpXXpI6GkkkEKS7fP+EbKHQICEbHY22ftzXbmA2dmZ35It9z7zFI2iKApCCCGEEFdJq3YAIYQQQlRtUkwIIYQQokKkmBBCCCFEhUgxIYQQQogKkWJCCCGEEBUixYQQQgghKkSKCSGEEEJUiBQTQgghhKgQKSaEEEIIUSFSTAhxzpEjR9BoNHz99deVfq6vv/4ajUbDkSNHXNvq1atH//79K/3cAKtXr0aj0bB69WqPnO98nnyc3qa037u73XDDDdxwww2VdnwhSiPFhHCrTz/9FI1GQ+fOndWOgkajcf3o9XoiIiJo3749Tz/9NHv37nXbeT799FOPFCBXw5uzVbZTp07x9NNPk5CQgL+/PzExMXTq1ImXX36Zs2fPqh1PdVarlQ8//JC2bdsSEhJCWFgYzZs357HHHmP//v2u/datW8fo0aPJzs6+6nP58vPQV2hkbQ7hTt26dSMlJYUjR46QmJhIo0aNVMui0Wi46aabePDBB1EUhZycHHbu3Mn8+fPJz89n/PjxPPfcc679FUXBYrFgMBjQ6XRlPk+LFi2Iiooq17d8h8OBzWbDZDKh0WiAom/sLVq0YMmSJWU+ztVmczqdWK1WjEYjWq1nv1NUxuO80OnTp2nbti25ubk8/PDDJCQkkJWVxa5du1iyZAm7du2iXr16lXb+Synt9+5uxa0SV3o+DhgwgKVLl3LPPffQtWtXbDYb+/fvZ8mSJYwZM4ahQ4cC8MEHH/Diiy9y+PDhq/4/u5rXiKha9GoHENXH4cOHWbduHT/99BPDhg1j1qxZvPnmm6pmatKkCffff3+Jbe+99x4DBgzg+eefJyEhgVtvvRUoKj78/PwqNU9+fj6BgYHodLpyFSzuptVqK/2xqunLL7/k2LFj/P3331x77bUlbsvNzcVoNLrlPGazuVwFmdq/92KbN29myZIljB07lldffbXEbR9//HGFWiGEb5LLHMJtZs2aRXh4OP369eNf//oXs2bNKnW/rKwsHnjgAVfT6pAhQ9i5c2ep/RX279/Pv/71LyIiIvDz86NDhw4sXry4QjkjIyOZM2cOer2esWPHuraX1mciLS2Nhx56iFq1amEymYiPj2fgwIGua9716tVjz549rFmzxnVJpfibYfH18TVr1vD4448TExNDrVq1StxW2rXz3377jTZt2uDn50ezZs346aefStw+evToUr/VXnjMy2W7VJ+J+fPn0759e/z9/YmKiuL+++/n5MmTJfYZOnQoQUFBnDx5kkGDBhEUFER0dDQvvPACDofjCv/7ZXucycnJaDQaJk+efNH91q1bh0ajYfbs2Zc8dlJSEjqdji5dulx0W0hISIlCql69eq5v4ee7sO9B8f/ZnDlzeP3116lZsyYBAQFs27YNjUbDzJkzLzrG8uXL0Wg0rlaYC39H/fv3p0GDBqU+hq5du9KhQwfXv7/66it69epFTEwMJpOJZs2aMW3atEv+H1xOUlISUNSSeCGdTkdkZCRQ9Fx78cUXAahfv77reVScvyyZLvc8LOtzGWDLli307duXqKgo/P39qV+/Pg8//PBVPX7hftIyIdxm1qxZ3HHHHRiNRu655x6mTZvG5s2b6dixo2sfp9PJgAED2LRpEyNGjCAhIYFFixYxZMiQi463Z88eunXrRs2aNfnPf/5DYGAg8+bNY9CgQfz444/cfvvtV521Tp069OjRg1WrVpGbm0tISEip+915553s2bOHJ598knr16pGRkcHvv//OsWPHqFevHlOmTOHJJ58kKCiI1157DYDY2NgSx3j88ceJjo5m1KhR5OfnXzZXYmIigwcPZvjw4QwZMoSvvvqKf//73yxbtoybbrqpXI+xLNnO9/XXX/PQQw/RsWNHxo0bR3p6Oh9++CF///0327dvJywszLWvw+Ggb9++dO7cmQ8++IAVK1YwceJEGjZsyIgRI66Y7UqPs0GDBnTr1o1Zs2bx7LPPlrjvrFmzCA4OZuDAgZc8ft26dXE4HHz77belPrcqYsyYMRiNRl544QUsFgvNmjWjQYMGzJs376JzzZ07l/DwcPr27VvqsQYPHsyDDz540evk6NGjbNiwgffff9+1bdq0aTRv3pzbbrsNvV7Pzz//zOOPP47T6WTkyJHlegx169YFiv4vu3Xrhl5f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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(6, 4))\n",
        "sns.countplot(x='Embarked', hue='Survived', data=df)\n",
        "plt.title(\"Survival Count by Embarked Location\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 410
        },
        "id": "Z3evrsKRiiH-",
        "outputId": "a86c885b-2f80-4c35-d9d3-f6ad5f69220b"
      },
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import files\n",
        "files.download('Titanic-Dataset.csv')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "id": "jFZmThiIj4wF",
        "outputId": "44842a2f-d309-4578-859f-f818b80a959c"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "\n",
              "    async function download(id, filename, size) {\n",
              "      if (!google.colab.kernel.accessAllowed) {\n",
              "        return;\n",
              "      }\n",
              "      const div = document.createElement('div');\n",
              "      const label = document.createElement('label');\n",
              "      label.textContent = `Downloading \"${filename}\": `;\n",
              "      div.appendChild(label);\n",
              "      const progress = document.createElement('progress');\n",
              "      progress.max = size;\n",
              "      div.appendChild(progress);\n",
              "      document.body.appendChild(div);\n",
              "\n",
              "      const buffers = [];\n",
              "      let downloaded = 0;\n",
              "\n",
              "      const channel = await google.colab.kernel.comms.open(id);\n",
              "      // Send a message to notify the kernel that we're ready.\n",
              "      channel.send({})\n",
              "\n",
              "      for await (const message of channel.messages) {\n",
              "        // Send a message to notify the kernel that we're ready.\n",
              "        channel.send({})\n",
              "        if (message.buffers) {\n",
              "          for (const buffer of message.buffers) {\n",
              "            buffers.push(buffer);\n",
              "            downloaded += buffer.byteLength;\n",
              "            progress.value = downloaded;\n",
              "          }\n",
              "        }\n",
              "      }\n",
              "      const blob = new Blob(buffers, {type: 'application/binary'});\n",
              "      const a = document.createElement('a');\n",
              "      a.href = window.URL.createObjectURL(blob);\n",
              "      a.download = filename;\n",
              "      div.appendChild(a);\n",
              "      a.click();\n",
              "      div.remove();\n",
              "    }\n",
              "  "
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<IPython.core.display.Javascript object>"
            ],
            "application/javascript": [
              "download(\"download_e333e4a0-c49f-41a8-83f2-3f7b06d1ace1\", \"Titanic-Dataset.csv\", 61194)"
            ]
          },
          "metadata": {}
        }
      ]
    }
  ]
}